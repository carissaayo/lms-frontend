/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as DashboardStudentIndexRouteImport } from './routes/dashboard/student/index'
import { Route as DashboardInstructorIndexRouteImport } from './routes/dashboard/instructor/index'
import { Route as DashboardInstructorStudentsIndexRouteImport } from './routes/dashboard/instructor/students/index'
import { Route as DashboardInstructorCoursesIndexRouteImport } from './routes/dashboard/instructor/courses/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardStudentIndexRoute = DashboardStudentIndexRouteImport.update({
  id: '/dashboard/student/',
  path: '/dashboard/student/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardInstructorIndexRoute =
  DashboardInstructorIndexRouteImport.update({
    id: '/dashboard/instructor/',
    path: '/dashboard/instructor/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardInstructorStudentsIndexRoute =
  DashboardInstructorStudentsIndexRouteImport.update({
    id: '/dashboard/instructor/students/',
    path: '/dashboard/instructor/students/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardInstructorCoursesIndexRoute =
  DashboardInstructorCoursesIndexRouteImport.update({
    id: '/dashboard/instructor/courses/',
    path: '/dashboard/instructor/courses/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/instructor': typeof DashboardInstructorIndexRoute
  '/dashboard/student': typeof DashboardStudentIndexRoute
  '/dashboard/instructor/courses': typeof DashboardInstructorCoursesIndexRoute
  '/dashboard/instructor/students': typeof DashboardInstructorStudentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/instructor': typeof DashboardInstructorIndexRoute
  '/dashboard/student': typeof DashboardStudentIndexRoute
  '/dashboard/instructor/courses': typeof DashboardInstructorCoursesIndexRoute
  '/dashboard/instructor/students': typeof DashboardInstructorStudentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/instructor/': typeof DashboardInstructorIndexRoute
  '/dashboard/student/': typeof DashboardStudentIndexRoute
  '/dashboard/instructor/courses/': typeof DashboardInstructorCoursesIndexRoute
  '/dashboard/instructor/students/': typeof DashboardInstructorStudentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/instructor'
    | '/dashboard/student'
    | '/dashboard/instructor/courses'
    | '/dashboard/instructor/students'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/instructor'
    | '/dashboard/student'
    | '/dashboard/instructor/courses'
    | '/dashboard/instructor/students'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/instructor/'
    | '/dashboard/student/'
    | '/dashboard/instructor/courses/'
    | '/dashboard/instructor/students/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DashboardInstructorIndexRoute: typeof DashboardInstructorIndexRoute
  DashboardStudentIndexRoute: typeof DashboardStudentIndexRoute
  DashboardInstructorCoursesIndexRoute: typeof DashboardInstructorCoursesIndexRoute
  DashboardInstructorStudentsIndexRoute: typeof DashboardInstructorStudentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/student/': {
      id: '/dashboard/student/'
      path: '/dashboard/student'
      fullPath: '/dashboard/student'
      preLoaderRoute: typeof DashboardStudentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/instructor/': {
      id: '/dashboard/instructor/'
      path: '/dashboard/instructor'
      fullPath: '/dashboard/instructor'
      preLoaderRoute: typeof DashboardInstructorIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/instructor/students/': {
      id: '/dashboard/instructor/students/'
      path: '/dashboard/instructor/students'
      fullPath: '/dashboard/instructor/students'
      preLoaderRoute: typeof DashboardInstructorStudentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/instructor/courses/': {
      id: '/dashboard/instructor/courses/'
      path: '/dashboard/instructor/courses'
      fullPath: '/dashboard/instructor/courses'
      preLoaderRoute: typeof DashboardInstructorCoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DashboardInstructorIndexRoute: DashboardInstructorIndexRoute,
  DashboardStudentIndexRoute: DashboardStudentIndexRoute,
  DashboardInstructorCoursesIndexRoute: DashboardInstructorCoursesIndexRoute,
  DashboardInstructorStudentsIndexRoute: DashboardInstructorStudentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
